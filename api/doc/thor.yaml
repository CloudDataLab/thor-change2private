openapi: 3.0.1
info:
  version: 1.0.0
  title: Thorest
  license:
    name: LGPL 3.0
    url: 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
  description: RESTful API to access VeChain Thor
servers:
  - url: '/'
    description: local thor node
tags:
  - name: Accounts
    description: Access to account objects
  - name: Transactions
    description: Access to transactions
  - name: Blocks
    description: Access to blocks
  - name: Events
    description: Access to event logs
  - name: Transfers
    description: Access to transfer logs
  - name: Node
    description: Access to node info
paths:
  '/accounts/{address}':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Accounts
      summary: get account object detail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    post:
      tags:
        - Accounts
      summary: perform contract call on account object
      requestBody:
        description: arguments and environment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCall'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractCallResult'
  '/accounts':
    post:
      parameters:
        - $ref: '#/components/parameters/RevisionInQuery'
      tags:
        - Accounts
      summary: perform contract call of deploying a contract
      requestBody:
        description: arguments and environment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCall'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractCallResult'
  '/accounts/{address}/code':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Accounts
      summary: retrieve code of account object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                example:
                  code: >-
                    0x6060604052600080fd00a165627a7a72305820c23d3ae2dc86ad130561a2829d87c7cb8435365492bd1548eb7e7fc0f3632be90029
  '/accounts/{address}/storage/{key}':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/StorageKeyInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Accounts
      summary: retrieve storage value of account object for given key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  value:
                    type: string
                example:
                  value: >-
                    0x0000000000000000000000000000000000000000000000000000000000000001
  /events:
    post:
      tags:
        - Events
      summary: filter event logs
      parameters:
        - $ref: '#/components/parameters/FilterOrderInQuery'
        - $ref: '#/components/parameters/FilterAddressInQuery'
      requestBody:
        description: event filter criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilteredEvent'
  /transfers:
    post:
      tags:
        - Transfers
      summary: filter transfer logs
      parameters:
        - $ref: '#/components/parameters/FilterOrderInQuery'
      requestBody:
        description: transfer log filter criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilteredTransfer'
  '/blocks/{revision}':
    parameters:
      - $ref: '#/components/parameters/RevisionInPath'
    get:
      tags:
        - Blocks
      summary: 'retrieve block by ID, number, or ''best'' for the latest one'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
  '/transactions/{id}':
    parameters:
      - $ref: '#/components/parameters/TxIDInPath'
      - $ref: '#/components/parameters/RawInQuery'
      - $ref: '#/components/parameters/HeadInQuery'
    get:
      tags:
        - Transactions
      summary: >-
        retrieve transaction by its id (if raw true , retrieve a raw
        transaction)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Transaction'
                  - $ref: '#/components/schemas/RawTx'
  '/transactions/{id}/receipt':
    parameters:
      - $ref: '#/components/parameters/TxIDInPath'
      - $ref: '#/components/parameters/HeadInQuery'
    get:
      tags:
        - Transactions
      summary: retrieve transaction receipt by transaction ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
  /transactions:
    post:
      tags:
        - Transactions
      summary: send raw transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                raw:
                  type: string
                  description: hex form of encoded transaction
                  example: '0xf86981ba800adad994000000000000000000000000000000000000746f82271080018252088001c0b8414792c9439594098323900e6470742cd877ec9f9906bca05510e421f3b013ed221324e77ca10d3466b32b1800c72e12719b213f1d4c370305399dd27af962626400'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                example:
                  id: >-
                    0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8
  /node/network/peers:
    get:
      tags:
        - Node
      summary: retrieve network status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PeerStats'
components:
  schemas:
    Account:
      properties:
        balance:
          type: string
          description: hex form of token balance
        energy:
          type: string
          description: hex form of remained amount of energy
        hasCode:
          type: boolean
      example:
        balance: '0xde0b6b3a7640000'
        energy: '0xde0b6b3a7640000'
        hasCode: false
    TxMeta:
      properties:
        blockID:
          type: string
          description: identifier of the block (bytes32)
        blockNumber:
          type: integer
          format: uint32
          description: number(height) of the block
        blockTimestamp:
          type: integer
          format: uint64
          description: unix timestamp of the block
    LogMeta:
      properties:
        blockID:
          type: string
          description: identifier of the block (bytes32)
        blockNumber:
          type: integer
          format: uint32
          description: number(height) of the block
        blockTimestamp:
          type: integer
          format: uint64
          description: unix timestamp of the block
        txID:
          type: string
          description: identifier of the transaction
        txOrigin:
          type: string
          description: the one who signed the transaction
    Block:
      properties:
        number:
          type: integer
          format: uint32
          description: number(height) of the block
        id:
          type: string
          description: identifier of the block (bytes32)
        size:
          type: integer
          format: uint32
          description: byte size of the block that is RLP encoded
        parentID:
          type: string
          description: ID of parent block (bytes32)
        timestamp:
          type: integer
          format: uint64
          description: unix timestamp of the block
        gasLimit:
          type: integer
          format: uint64
          description: gas limit of the block
        beneficiary:
          type: string
          description: address of account to receive block reward
        gasUsed:
          type: integer
          format: uint64
        totalScore:
          type: integer
          format: uint64
        txsRoot:
          type: string
          description: root hash of transactions in the block (bytes32)
        stateRoot:
          type: string
          description: root hash of accounts state (bytes32)
        receiptsRoot:
          type: string
          description: root hash of transaction receipts (bytes32)
        signer:
          type: string
          description: the one who signed this block (bytes20)
        isTrunk:
          type: boolean
          description: whether block is trunk
        transactions:
          type: array
          description: IDs of transactions
          items:
            type: string
            description: ID of transaction (bytes32)
      example:
        number: 1
        id: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
        size: 238
        parentID: '0x00000002a0c772179aa43cb6bb55d0b31369f9e92014c88a50b2cb99f9be1c5d'
        timestamp: 1523156271
        gasLimit: 10000000
        beneficiary: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        gasUsed: 0
        totalScore: 101
        txsRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        stateRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        receiptsRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        signer: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        isTrunk: true
        transactions:
          - '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
    RawTx:
      properties:
        raw:
          type: string
          description: hex form of encoded transaction
        meta:
          $ref: '#/components/schemas/TxMeta'
      example:
        raw: >-
          0xf86981ba800adad994000000000000000000000000000000000000746f82271080018252088001c0b8414792c9439594098323900e6470742cd877ec9f9906bca05510e421f3b013ed221324e77ca10d3466b32b1800c72e12719b213f1d4c370305399dd27af962626400
        meta:
          blockID: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          blockNumber: 1
          blockTimestamp: 1523156271
    Clause:
      properties:
        to:
          type: string
          description: 'recipient of clause, null for contract deployment (bytes32)'
        value:
          type: string
          description: hex form of token to be transferred
        data:
          type: string
          description: input data (bytes)
      example:
        to: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        value: '0x10'
        data: null
    Transaction:
      properties:
        id:
          type: string
          description: identifier of the transaction
        chainTag:
          type: integer
          format: uint8
          description: last byte of genesis block ID
        blockRef:
          type: string
          description: 8 bytes prefix of some block ID
        expiration:
          type: integer
          format: uint32
          description: 'expiration relative to blockRef, in unit block'
        clauses:
          type: array
          items:
            $ref: '#/components/schemas/Clause'
        gasPriceCoef:
          type: integer
          format: uint8
          description: coefficient used to calculate the final gas price
        gas:
          type: integer
          format: uint64
          description: max amount of gas can be consumed to execute this transaction
        origin:
          type: string
          description: the one who signed the transaction
        nonce:
          type: string
        dependsOn:
          type: string
          description: >-
            ID of the transaction on which the current transaction depends
            (bytes32)
        size:
          type: integer
          format: uint32
          description: byte size of the transaction that is RLP encoded
        meta:
          $ref: '#/components/schemas/TxMeta'
      example:
        id: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        chainTag: 1
        blockRef: '0x00000001511fc0be'
        expiration: 30
        clauses: []
        gasPriceCoef: 128
        gas: 21000
        origin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        nonce: '0xd92966da424d9939'
        dependsOn: 'null'
        size: 180
        meta:
          blockID: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          blockNumber: 1
          blockTimestamp: 1523156271
    Event:
      properties:
        address:
          type: string
          description: the address of contract which produces the event (bytes20)
        topics:
          type: array
          items:
            type: string
        data:
          type: string
      example:
        address: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        topics:
          - '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        data: '0xddff'
    Transfer:
      properties:
        sender:
          type: string
          description: address that sends tokens
        recipient:
          type: string
          description: address that receives tokens
        amount:
          type: string
          description: amount of tokens
      example:
        sender: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        recipient: '0x733b7269443c70de16bbf9b0615307884bcc5636'
        amount: '0xde0b6b3a7640000'
    Receipt:
      properties:
        gasUsed:
          type: integer
          format: uint64
        gasPayer:
          type: string
          description: address of account who paid used gas
        paid:
          type: string
          description: hex form of amount of paid energy
        reward:
          type: string
          description: hex form of amount of reward
        reverted:
          type: boolean
          description: true means the transaction was reverted
        outputs:
          type: array
          items:
            properties:
              contractAddress:
                type: string
                description: >-
                  deployed contract address, if the corresponding clause is a
                  contract deployment clause
              events:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
              transfers:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
        meta:
          $ref: '#/components/schemas/LogMeta'
      example:
        gasUsed: 21000
        gasPayer: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        paid: '0x723daf2'
        reward: '0x723daf2'
        reverted: false
        outputs:
          - 'contractAddress:''0x7567d83b7b8d80addcb281a71d54fc7b3364ffed''': null
            events:
              - address: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
                topics: 
                  - '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
                data: 
                  '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
            transfers:
              - sender: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
                recipient: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
                amount: '0x123f'
        meta:
          blockID: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          blockNumber: 1
          blockTimestamp: 1523156271
          txID: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
          txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    ContractCall:
      properties:
        value:
          type: string
          description: amount of token to be transferred
        data:
          type: string
          description: input data for contract call
        gas:
          type: integer
          format: uint64
          description: 'optional, to specify max gas for execution'
        gasPrice:
          type: string
          description: 'optional, absolute gas price'
        caller:
          type: string
          description: 'optional, to specify the caller'
      example:
        value: '0x0'
        data: '0x5665436861696e2054686f72'
    ContractCallResult:
      properties:
        data:
          type: string
          description: the output data
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        gasUsed:
          type: integer
          format: uint64
          description: gas used during execution
        reverted:
          type: boolean
        vmError:
          type: string
      example:
        data: '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
        events: []
        transfers: []
        gasUsed: 21000
        reverted: false
        vmError: ''
    Options:
      properties:
        offset:
          type: integer
        limit:
          type: integer
    Range:
      properties:
        unit:
          type: string
          enum:
            - block
            - time
        from:
          type: integer
          format: uint64
        to:
          type: integer
          format: uint64
      example:
        unit: block
        from: 100
        to: 1000
    TopicSet:
      properties:
        topic0:
          type: string
        topic1:
          type: string
        topic2:
          type: string
        topic3:
          type: string
        topic4:
          type: string
      example:
        topic0: '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
    EventFilter:
      properties:
        range:
          $ref: '#/components/schemas/Range'
        options:
          $ref: '#/components/schemas/Options'
        topicSets:
          type: array
          items:
            $ref: '#/components/schemas/TopicSet'
    FilteredEvent:
      properties:
        topics:
          type: array
          items:
            type: string
        data:
          type: string
        meta:
          $ref: '#/components/schemas/LogMeta'
      example:
        topics:
          - '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
        data: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        meta:
          blockID: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          blockNumber: 1
          blockTimestamp: 1523156271
          txID: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
          txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    AddressSet:
      properties:
        txOrigin:
          type: string
        sender:
          type: string
        recipient:
          type: string
      example:
        txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        sender: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        recipient: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    TransferFilter:
      properties:
        range:
          $ref: '#/components/schemas/Range'
        options:
          $ref: '#/components/schemas/Options'
        AddressSets:
          type: array
          items:
            $ref: '#/components/schemas/AddressSet'
    FilteredTransfer:
      properties:
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
        meta:
          $ref: '#/components/schemas/LogMeta'
      example:
        sender: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        recipient: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        amount: '0x9fad'
        meta:
          blockID: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          blockNumber: 1
          blockTimestamp: 1523156271
          txID: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
          txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    PeerStats:
      properties:
        name:
          type: string
        bestBlockID:
          type: string
        totalScore:
          type: integer
        peerID:
          type: string
        netAddr:
          type: string
        inbound:
          type: boolean
        duration:
          type: integer
      example: 
        name: 'thor/v1.0.0-6680b98-dev/linux/go1.10.3'
        bestBlockID: '0x000087b3a4d4cdf1cc52d56b9704f4c18f020e1b48dbbf4a23d1ee4f1fa5ff94'
        totalScore: 68497
        peerID: '50e122a505ee55b84331068acfd857e37ad58f463a0fab9aaff2c1e4b2e2d22ae71dc14fdaf6eead74bd3f60594644aa35c588f9ca6be3341e2ce18ddc413321'
        netAddr: '128.1.39.120:11235'
        inbound: false
        duration: 28
  parameters:
    AddressInPath:
      name: address
      in: path
      description: address of account
      required: true
      schema:
        type: string
      example: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    RawInQuery:
      name: raw
      in: query
      description: whether retrieve a raw transaction.
      required: false
      schema:
        type: boolean
    RevisionInQuery:
      name: revision
      in: query
      description: can be block number or ID. best block is assumed if omitted.
      schema:
        type: string
    RevisionInPath:
      name: revision
      in: path
      description: 'can be block number, ID or ''best'' for lastest block'
      required: true
      schema:
        type: string
      example: best
    HeadInQuery:
      name: head
      in: query
      description: ID of head block. best block is assumed if omitted
      schema:
        type: string
    StorageKeyInPath:
      in: path
      description: the key(position) to access account storage
      required: true
      name: key
      schema:
        type: string
      example: '0x0000000000000000000000000000000000000000000000000000000000000001'
    FilterAddressInQuery:
      name: address
      in: query
      description: address of account
      required: false
      schema:
        type: string
      example: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    FilterOrderInQuery:
      name: order
      in: query
      description: order of filters
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      example: asc
    TxIDInPath:
      in: path
      description: ID of transaction
      required: true
      name: id
      schema:
        type: string
      example: '0x9bcc6526a76ae560244f698805cc001977246cb92c2b4f1e2b7a204e445409ea'
